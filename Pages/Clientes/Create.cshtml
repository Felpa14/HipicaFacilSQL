@page
@model HipicaFacilSQL.Pages.Clientes.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1 class="fs-2"><i class="fa-solid fa-user-plus"></i>  Cadastrar Cliente</h1>
<hr />

<form method="post">
    <div class="container text-center">
        <div class="row">
            <div class="col-sm-6">
                <div class="form-floating">
                    <input type="text" class="form-control" id="nome" placeholder=" " maxlength="50" required asp-for="Cliente.Nome" />
                    <label for="nome">Nome:</label>
                    <small> </small>
                </div>
            </div>

            <div class="col-sm-6">
                <div class="form-floating">
                    <input type="email" id="email" placeholder=" " maxlength="50" class="form-control" data-inputmask="'alias': 'email'" required asp-for="Cliente.Email" />
                    <label for="email">Email:</label>
                    <small class="text-muted">Ex: "exemplo@exemplo.com.br"</small>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-6">
                <div class="form-floating">
                    <input type="text" id="cpf" asp-for="Cliente.Cpf" class="form-control" placeholder=" " maxlength="14" required pattern="\d{3}\.\d{3}\.\d{3}-\d{2}" oninput="formatarCPF(this)" />
                    <small class="text-muted">Ex: "123.456.789-00"</small>
                    <label for="cpf">CPF:</label>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-floating">
                    <input type="text" id="telefone" asp-for="Cliente.Telefone" class="form-control" placeholder=" " maxlength="14" required pattern="\(\d{2}\)\d{5}-\d{4}" oninput="formatarTelefone(this)" />
                    <small class="text-muted">Ex: "(11)98765-4321"</small>
                    <label for="telefone">Telefone:</label>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-3">
                <div class="form-floating">
                        <input type="text" id="cep" asp-for="Cliente.Cep" class="form-control" placeholder=" " maxlength="9" required pattern="\d{5}-\d{3}" oninput="formatarCEP(this)" />
                    <div id="loading-icon" style="display: none;">
                        <i class="fas fa-spinner fa-spin"></i>
                    </div>
                        <i class="fas fa-info-circle" data-toggle="tooltip" data-placement="right" title="O seu endereço será puxado automaticamente. Modifique ou adicione informações se necessário."></i>
                        <small class="text-muted">Ex: "12345-300"</small>
                        <label for="cep">CEP:</label>
                </div>
             </div>
             <div class="col-md-3">
                <div class="form-floating">
                        <input type="text" id="complemento" asp-for="Cliente.Complemento" class="form-control" placeholder=" " />
                        <small class="text-muted">Ex: "469 B"</small>
                        <label for="complemento">Complemento:</label>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-floating">
                    <input type="text" id="cidade" asp-for="Cliente.Cidade" class="form-control" placeholder=" " />
                    <small class="text-muted">Ex: "São Paulo"</small>
                    <label for="cidade">Cidade:</label>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-floating">
                        <input type="text" id="bairro" asp-for="Cliente.Bairro" class="form-control" placeholder=" " />
                        <small class="text-muted">Ex: "Loanda"</small>
                        <label for="bairro">Bairro:</label>
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-sm-12">
                <div class="form-floating">
                    <input type="text" id="endereco" asp-for="Cliente.Endereco" class="form-control" placeholder=" " />
                    <small class="text-muted">Ex: "Rua Águas Claras"</small>
                    <label for="endereco">Endereço:</label>
                </div>
            </div>
        </div>
        <br />

        <div class="row">
            <div class="col-sm-12 ">
                <button type="submit" value="Create" class="btn mt-3">Adicionar Cliente</button>
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-page="Index"><i class="fa-solid fa-backward-step"></i>  Voltar para a Tabela</a>
</div>

@section Scripts {
    <script>
        document.getElementById('cep').addEventListener('blur', async function () {
            // Mostra o ícone de espera
            document.getElementById('loading-icon').style.display = 'block';

            var cep = this.value.replace(/\D/g, '');
            if (cep.length === 8) {
                try {
                    var response = await fetch(`/Clientes/Create?handler=Endereco&cep=${cep}`);
                    if (response.ok) {
                        var endereco = await response.json();
                        console.log(endereco); // Verifique os dados do endereço no console
                        document.getElementById('endereco').value = endereco.logradouro;
                        document.getElementById('cidade').value = endereco.localidade;
                        document.getElementById('complemento').value = endereco.complemento;
                        document.getElementById('bairro').value = endereco.bairro;
                        // Preencha os outros campos do endereço conforme necessário
                    } else {
                        console.error('Erro ao buscar CEP:', response.statusText);
                    }
                } catch (error) {
                    console.error('Erro ao buscar CEP:', error);
                } finally {
                    // Oculta o ícone de espera, tanto em caso de sucesso quanto em caso de erro
                    document.getElementById('loading-icon').style.display = 'none';
                }
            }
        });

        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
        });

        document.getElementById('cep').addEventListener('blur', async function () {
            var cep = this.value.replace(/\D/g, '');
            if (cep.length === 8) {
                try {
                    var response = await fetch(`/Clientes/Create?handler=Endereco&cep=${cep}`);
                    if (response.ok) {
                        var endereco = await response.json();
                        console.log(endereco); // Verifique os dados do endereço no console
                        document.getElementById('endereco').value = endereco.logradouro;
                        document.getElementById('cidade').value = endereco.localidade;
                        document.getElementById('complemento').value = endereco.complemento;
                        document.getElementById('bairro').value = endereco.bairro;
                        // Preencha os outros campos do endereço conforme necessário
                    } else {
                        console.error('Erro ao buscar CEP:', response.statusText);
                    }
                } catch (error) {
                    console.error('Erro ao buscar CEP:', error);
                }
            }
        });

        function formatarCPF(campo) {
            // Remove tudo que não for número
            var valor = campo.value.replace(/\D/g, '');

            // Formata o CPF: xxx.xxx.xxx-xx
            valor = valor.replace(/(\d{3})(\d)/, '$1.$2');
            valor = valor.replace(/(\d{3})(\d)/, '$1.$2');
            valor = valor.replace(/(\d{3})(\d{1,2})$/, '$1-$2');

            // Atualiza o valor do campo
            campo.value = valor;
        }

        function formatarTelefone(campo) {
            // Remove tudo que não for número
            var valor = campo.value.replace(/\D/g, '');

            // Formata o telefone: (xx)xxxxx-xxxx
            valor = valor.replace(/(\d{2})(\d)/, '($1)$2');
            valor = valor.replace(/(\d{5})(\d)/, '$1-$2');

            // Atualiza o valor do campo
            campo.value = valor;
        }
        function formatarCEP(campo) {
            var valor = campo.value.replace(/\D/g, '');
            valor = valor.replace(/^(\d{5})(\d{3})$/, '$1-$2');
            campo.value = valor;
        }




    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

