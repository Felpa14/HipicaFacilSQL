@page
@model HipicaFacilSQL.Pages.Produtos.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Cadastro de Estoque</h1>
<hr />
<br />

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            <a asp-page="Create"> <i class="fa-solid fa-circle-plus fa-lg" style="color:green" align="right"></i>&ensp;Novo Produto&ensp;</a>
            | &ensp;Encontre pelo Nome:&ensp;
            <input type="text" name="SearchString" style="border-radius:5px" value="@Model.CurrentFilter" />&ensp;
            <input type="submit" value="Pesquisar" class="btn btn-primary" />&ensp; |
            <a asp-page="./Index">&ensp;Voltar para a tabela</a>&ensp;&ensp;&ensp;&ensp;
        </p>
    </div>
</form>
<table class="table-responsive">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NomeSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                @Html.DisplayNameFor(model => model.Produtos[0].Nome)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Produtos[0].Validade)
            </th>
            <th>
                Descrição
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Produtos[0].Tipo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Produtos[0].Quantidade)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Produtos) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Validade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Descricao)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tipo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantidade)
            </td>
            <td class="text-center">
                <a asp-page="./Edit" asp-route-id="@item.ID"><i class="fa-solid fa-pen"></i></a> |
                <a asp-page="./Details" asp-route-id="@item.ID"><i class="fa-solid fa-magnifying-glass"></i></a> |
                <a asp-page="./Delete" asp-route-id="@item.ID"><i class="fa-solid fa-trash"></i></a>
            </td>
        </tr>
}
    </tbody>
</table>
<hr />

@{
    var prevDisabled = !Model.Produtos.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Produtos.HasNextPage ? "disabled" : "";
}
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Produtos.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Anterior
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Produtos.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Próximo
</a>
